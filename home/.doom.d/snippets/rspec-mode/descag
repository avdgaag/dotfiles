# -*- mode: snippet -*-
# name: Describe GET controller action
# key: descg
# condition: t
# --
describe "${1:GET} ${2:show}" do
	it "routes to /${3:articles/1}" do
		expect($1: "/$3").to route_to("${4:articles}#$2", $5$6)
		expect($4_path(${5:customer_id: "2", }${6:id: "1"})).to eql("/$3")
	end

	context "when authenticated and authorized" do
		let(:${7:article}) { ${8:Article}.new }

		before do
			allow($8).to receive(:find).with("1").and_return($7)
		end

		it "successfully renders the show template" do
			$1 :$2, params: { $4$6 }
			expect(response).to have_http_status(:ok)
			expect(response).to render_template("$2")
		end

		it "assigns article" do
			$1 :$2, params: { $4$6 }
			expect(assigns[:$7]).to be($7)
		end
	end

	context "when authenticated but not authorized" do
		it "redirects to the index page" do
			$1 :$2, params: { $4$6 }
			expect(response).to redirect_to("/")
			expect(flash[:alert]).to eql("You are not authorized")
		end
	end

	context "when not authenticated" do
		it "redirects to the log in page" do
			$1 :$2, params: { $5$6 }
			expect(response).to redirect_to("/session")
			expect(flash[:alert]).to eql("You need to log in.")
		end
	end
end