# -*- mode: snippet -*-
# name: module
# key: mod
# --
module ${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`} exposing (main)

import Html exposing (..)
import Html.Attributes exposing (..)
import Html.Events exposing (..)

-- Model


type alias Model =
    Int


type Msg
    = NoOp
    | Increment
    | Decrement


init : ( Model, Cmd Msg )
init =
    ( 0, Cmd.none )


-- Update


update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    case msg of
        NoOp ->
            ( model, Cmd.none )

        Increment ->
            ( model + 1, Cmd.none )

        Decrement ->
            ( model - 1, Cmd.none )


-- View


view : Model -> Html Msg
view model =
    div
        []
        [ h1 [] [ text <| toString model ]
        , button [ onClick Increment ] [ text "+" ]
        , button [ onClick Decrement ] [ text "-" ]
        ]


-- Wiring


subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none


main : Program Never Model Msg
main =
    program
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }
